print('12.0')
local Upgrade = 'charge_power'
local HomeGUI = game:GetService("Players").LocalPlayer.PlayerGui.NewsApp
local HomeReg = game:GetService("Players").LocalPlayer.PlayerGui.ExtraButtonsApp
local clientData = require(game.ReplicatedStorage.ClientModules.Core.ClientData)
local playerData = clientData.get_data()[tostring(game.Players.LocalPlayer)]
task.spawn(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/nx1l/Farm-Gems-Roblox/refs/heads/main/FarmingEvent/ClickPlaying"))()
end)

spawn(function()
    while wait(1) do

        local LureFs = {}

        local Event = workspace.HouseInteriors.furniture:GetChildren()
        for num, i in Event do
            if string.find(i.Name, '1/nil') then
                local originalString = i.Name
                local Fs = string.gsub(originalString, game.Players.LocalPlayer.Name..'/1/nil/true/', "")
                table.insert(LureFs, Fs)
            else
                break
            end
        end
        
        local a = 0
        local clientData = require(game.ReplicatedStorage.ClientModules.Core.ClientData)
        local playerData = clientData.get_data()[tostring(game.Players.LocalPlayer)]
        for num, i_2 in LureFs do
            for i, petData in pairs(playerData.inventory.food) do
                if petData.kind == 'winter_2024_winter_deer_bait' and a == 0 then
                    local args2 = {
                        [1] = game:GetService("Players").LocalPlayer,
                        [2] = i_2,
                        [3] = "UseBlock",
                        [4] = false,
                        [5] = workspace:WaitForChild("PlayerCharacters"):WaitForChild(game.Players.LocalPlayer.Name)
                    }          
                    game:GetService("ReplicatedStorage"):WaitForChild("API"):WaitForChild("HousingAPI/ActivateFurniture"):InvokeServer(unpack(args2))
                    task.wait(.1)
                    local args = {
                        [1] = game:GetService("Players").LocalPlayer,
                        [2] = i_2,
                        [3] = "UseBlock",
                        [4] = {
                            ["bait_unique"] = petData.unique
                        },
                        [5] = workspace:WaitForChild("PlayerCharacters"):WaitForChild(game.Players.LocalPlayer.Name)
                    }
                   
                    game:GetService("ReplicatedStorage"):WaitForChild("API"):WaitForChild("HousingAPI/ActivateFurniture"):InvokeServer(unpack(args))
                elseif a == 1 then
                    print('0'..' - '..a)
                    a = 0
                    break       
                end
            end
        end

        repeat
            task.wait(10)
            local args = {
                [1] = "frostclaws_revenge"
            }       
            game:GetService("ReplicatedStorage"):WaitForChild("API"):WaitForChild("MinigameAPI/LobbyCreate"):InvokeServer(unpack(args))
            task.wait(1)
            local args = {
                [1] = {
                    ["startup_settings"] = {}
                }
            }        
            game:GetService("ReplicatedStorage"):WaitForChild("API"):WaitForChild("MinigameAPI/LobbyStart"):FireServer(unpack(args))
        until game:GetService("Players").LocalPlayer.PlayerGui.MinigameInGameApp.Enabled == true

        local Event = workspace.Interiors:GetChildren()
        for num, i in Event do
            if string.find(i.Name, 'FrostclawsRevengeInterior') then
                local originalString = i.Name
                _G.WinterEventFindName = string.gsub(originalString, "FrostclawsRevengeInterior::", "")
                print(_G.WinterEventFindName)
                _G.EventName = i.Name
            else
                break
            end
        end
        local RewardGUI = game:GetService("Players").LocalPlayer.PlayerGui.MinigameRewardsApp.Body
        local GingerCountGUI = game:GetService("Players").LocalPlayer.PlayerGui.AltCurrencyIndicatorApp
        while wait() do
            local UpgradesGUI = game:GetService("Players").LocalPlayer.PlayerGui.FrostclawsRevengeUpgradeApp
            if RewardGUI.Visible == true and GingerCountGUI.Enabled == true or GingerCountGUI.Enabled == true then
                break
            elseif UpgradesGUI.Enabled == true and Upgrade == 'charge_power' then
                task.wait(1)
                local args = {
                    [1] = 'frostclaws_revenge::'.._G.WinterEventFindName,
                    [2] = "upgrade_chosen",
                    [3] = "charge_power"
                }
                
                game:GetService("ReplicatedStorage"):WaitForChild("API"):WaitForChild("MinigameAPI/MessageServer"):FireServer(unpack(args))
                UpgradesGUI.Enabled = true  
                task.wait(1)
                UpgradesGUI.Enabled = false
            else
                pcall(function ()
                    local Enemys = workspace.Interiors[_G.EventName].LocalEnemies:GetChildren()
                    for num2, i2 in Enemys do
                        if RewardGUI.Visible == true then
                            break
                        else
                            pcall(function ()
                                local args = {
                                    [1] = 'frostclaws_revenge::'.._G.WinterEventFindName,
                                    [2] = "hit_enemies",
                                    [3] = {
                                        [1] = i2.Name
                                    },
                                    [4] = "pet_charge"
                                }
                                game:GetService("ReplicatedStorage"):WaitForChild("API"):WaitForChild("MinigameAPI/MessageServer"):FireServer(unpack(args))
                            end)
                        end
                    end
                end)
            end
        end
    end
end)
